pipeline {
    
    agent any
    
    options { 
        disableConcurrentBuilds() 
        timeout(time: 1, unit: 'HOURS')
    }
    
    environment {
        N_G_ENDPOINT = credentials('N_G_ENDPOINT')
        ECR_URL = credentials('ECR_REGISTRY_URL')
        CYPRESS_CACHE_FOLDER = '/var/lib/jenkins/.cache/Cypress/10.1.0/Cypress'
        CYPRESS_RECORD_KEY = credentials('CYPRESS_RECORD_KEY')
    }

    stages {
        stage('Clean workspace...') {
            steps {
                cleanWs()
                checkout scm
            }
        }

        // stage('Download dependencies...') {
        //     steps {
        //         sh 'yarn'
        //         sh 'yarn codegen'
        //     }
        // }

        // stage('Unit testing...') {
        //     steps {
        //         sh 'yarn test:coverage'
        //     }
        // }

        // stage('Linting...') {
        //     steps {
        //         sh 'yarn lint'

        //     }
        // }

        // stage('Building...') {
        //     steps {
        //         sh 'yarn build'
        //     }
        // }

        // stage('E2E testing...') {
        //     steps {
        //         sh 'yarn e2e:start-server:record'
        //     }
        // }

        stage('Building and pushing docker image to ECR...') {
            steps {
                script{
                    docker.withRegistry('https://997730026610.dkr.ecr.ap-southeast-2.amazonaws.com/$ECR_URL', 'ecr:ap-southeast-2:AWS_CREDENTIAL') {
                        // app.push("${env.BUILD_NUMBER}")
                        app = docker.build("${ECR_URL}:${env.BUILD_NUMBER}", "--build-arg N_G_ENDPOINT=${N_G_ENDPOINT} -f Dockerfile.Kelvin .")
                        app.push()
                    }
                }
            }
        }
    }


}